@model List<ProgrammingTask>

<style>
   table {
  width: 100%;
  border-collapse: collapse;
  border-spacing: 0;
  font-family: Arial, sans-serif;
  font-size: 12px;
  line-height: 1.2;
  margin-bottom: 5px;
}

th {
  background-color: #f5f5f5;
  color: #333;
  font-weight: bold;
  text-align: left;
  border: 1px solid #ddd;
  padding: 8px 8px;
}

h1 {
  font-family: 'Kanit', sans-serif;
  font-weight: 200;
}

td {
  padding: 0;
  margin: 0;
  width: 12.5%;
}

tr:nth-child(even) {
  background-color: #fafafa;
}

tr:hover {
  background-color: #f5f5f5;
}

.task-status {
  display: inline-block;
  padding: 5px 10px;
  font-size: 12px;
  font-weight: bold;
  text-transform: uppercase;
  border-radius: 3px;
  color: #fff;
}

.task-status-ac {
  background-color: #28a745;
}

.task-status-notac {
  background-color: #dc3545;
}

.task-status-wa {
  background-color: #ffc107;
}

.task-status-tle {
  background-color: #6c757d;
}

.task-status-ce {
  background-color: #17a2b8;
}

  td.difficulty {
    font-weight: bold;
    text-transform: uppercase;
  }

  td.difficulty-easy {
    color: #28a745;
  }

  td.difficulty-medium {
    color: #ffc107;
  }

  td.difficulty-hard {
    color: #dc3545;
  }

.button:hover {
  background-color: #3e8e41;
}


.button img {
  display: block;
  height: 30px;
  width: 30px;
  margin: 0 auto;
}

.button {
  display: inline-block;
  margin: 10px;
  padding: 10px;
  background-color: #909590;
  border: none;
  border-radius: 5px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.25);
  transition: background-color 0.3s ease;
}
</style>

<h1>LIST OF TASKS</h1>

@{
    // ADD NEW DIFFICULTIES HERE:
    List<string> difficulties = new List<string>{"ALL", "EASY", "MEDIUM", "HARD"};

    // ADD NEW TYPES HERE:
    List<string> types = new List<string>{"ALL", "SORT", "MERGE", "STRING", "ARRAY"};
}

@if (Model == null)
{
    <p>Model is empty!</p>
}
else
{
    <div class="container">
        <div>
            <label for="difficulty" style="font-weight: bold; width: 85%; text-align: right"> DIFFICULTY:</label>
            <select id="difficulty" onchange="filterList()" style="width: 10%;">
                @foreach(var difficulty in difficulties)
                {
                    <option value="@difficulty">@difficulty</option>
                }
            </select>
        </div>

        <div>
            <label for="type" style="font-weight: bold; width: 85%; text-align: right;"> TYPE:</label>
            <select id="type" onchange="filterList()" style="width: 10%;"> 
                @foreach(var type in types)
                {
                    <option value="@type">@type</option>
                }
            </select>
        </div>

        <table>
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Difficulty</th>
                    <th>Type</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
@foreach (var task in Model)
{
    <tr class="bottom" data-difficulty="@task.Difficulty" data-type="@task.Type">
        <td><a href="@Url.Action("IndexOne", new { id = task.IdTask })" style="text-decoration:none; color:black;">@task.Title</a></td>
        <td class="difficulty difficulty-@task.Difficulty.ToLower()">@task.Difficulty</td>
        <td>@task.Type</td>
        <td>
            
<div>
  <a href="@Url.Action("Leaderboard", new { id = task.IdTask })" class="button">
    <img src="@Url.Content("~/images/Leaderbord.png")" alt="Leaderboard">
  </a>
  <a href="@Url.Action("Solution", new { id = task.IdTask })" class="button">
    <img src="@Url.Content("~/images/Solution.png")" alt="Solution">
  </a>
</div>
        </td>
    </tr>
}
</tbody>
        </table>
    </div>
    
    <script>
        function filterList() {
            var difficulty = document.getElementById("difficulty").value;
            var type = document.getElementById("type").value;
            var rows = document.querySelectorAll("tr.bottom");
            
            rows.forEach(function(row) {

                if ((difficulty === "ALL" || row.getAttribute("data-difficulty") === difficulty) && 
                    (type === "ALL" || row.getAttribute("data-type") === type)) {
                    row.style.display = "table-row";
                } else {
                    row.style.display = "none";
                }
            });
        }
    </script>
}
